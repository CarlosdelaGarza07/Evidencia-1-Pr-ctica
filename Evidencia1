import datetime
import time
import re

rfc_pattern = r'^[A-Z&Ñ]{4}\d{6}[A-Z\d]{3}$'
email_pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
fecha_actual = datetime.date.today()
servicio = {}
servicio_cancelado = {}
servicio_recuperado={}
print("Bienvenido al servicio de taller mecánico")
print("¿Qué le podemos ofrecer?")


while True:
    try:
        opcion= int(input("""Este es nuestro menú de nuestros servicios, presione un número para continuar:
    1. Registrar una nota
    2. Consultas y reportes
    3. Cancelar una nota
    4. Recuperar una nota
    5. Salir del menú
    R= """))
        
        if opcion == 1:
            print("Registro de nota")
            while True:
                while True:
                try:
                    fecha_nota = input("Ingrese la fecha de la nota (dd/mm/aaaa):\n ")
                    fecha_nueva = datetime.datetime.strptime(fecha_nota, "%d/%m/%Y").date()
                except Exception:
                    print("Fecha no válida")
                else:
                    if fecha_nueva > fecha_actual:
                        print("Fecha mayor a la actual. Intente de nuevo")
                        continue
                    break

            while True:
                nombre_cliente = input("Ingrese su nombre y apellido:\n ")
                if nombre_cliente.strip() == "":
                    print("Nombre no válido")
                    continue
                break

            while True:
                nombre_servicio = input("Ingrese el nombre del servicio:\n ")
                if nombre_servicio.strip() == "":
                    print("Nombre no válido")
                    continue
                break

            while True:
                    try:
                        monto = float(input("Ingrese el monto a pagar:\n "))
                        if monto < 0:
                            continue
                    except Exception:
                        print("Monto no escrito correctamente en números, intente nuevamente")
                        continue
                    break

            while True:
                rfc = input("Ingrese su RFC, recuerda usar el formato de RFC, por ejemplo XEXT990101NI4:\n ").strip().upper()
                if re.match(rfc_pattern, rfc):
                    print(f"RFC valido: {rfc}")
                    break
                else:
                    print("RFC no valido. Por favor, ingrese un RFC valido en el formato correcto")

            while True:
                email_cliente = input("Ingrese su correo electronico:\n ")
                if re.match(email_pattern, email_cliente):
                    print(f"Correo electronico valido: {email_cliente}")
                    break
                else:
                    print("Correo electronico no valido. Por favor, ingrese un correo valido")

            folio = max(servicio.keys(), default=0) + 1
            servicio[folio] = [
                nombre_servicio,
                fecha_nueva,
                nombre_cliente,
                round (monto, 2),
                rfc,
                email_cliente
            ]

            opcion_registro_1 = int(input("""¿Te gustaria registrar un servicio mas a la nota?
    1. Si
    2. No:
    """))
            if opcion_registro_1 == 1:
                continue

            if opcion_registro_1 == 2:
                break

            print("Registro de Nota:")
            print(f"Folio\t\tFecha\t\tNombre del Cliente\tMonto\tNombre del Servicio\tRFC              Correo Electronico")
            for folio, datos in servicio.items():
                print(f"{folio}\t{datos[1]}\t{datos[2]}\t\t\t{datos[3]}\t\t{datos[0]}\t\t{datos[4]}    {datos[5]}")
            print("\n")   
            
        if opcion == 2:
            print("Consultas y reportes")
            print("Bienvenido al submenú de consultas")
            while True:
                submenu_opc = int(input("""En este menú tenemos 3 opciones las cuales son las siguientes:
                1. Consulta por periodo
                2. Consulta por folio
                3. Salir al menú principal
                Favor de escoger una opción: """))

                if submenu_opc == 1:
                    print("Escogiste consulta por periodo")
                    while True:
                            fecha_inicial_str = input("Ingrese la fecha inicial (dd/mm/aaaa):\n")
                            if fecha_inicial_str.strip() == "":
                                fecha_inicial_str = "01/01/2000" 
                            fecha_inicial = datetime.datetime.strptime(fecha_inicial_str, "%d/%m/%Y").date()
                            print(f"La fecha que se colocará es: {fecha_inicial.strftime('%d/%m/%Y')}")

                            fecha_final_str = input("Ingrese la fecha final (dd/mm/aaaa):\n")
                            if fecha_final_str.strip() == "":
                                fecha_final_str =datetime.date.today()
                            fecha_final = fecha_final_str

                            print(f"La fecha que se colocara es: {fecha_inicial.strftime('%d/%m/%Y')}")

                            if fecha_final < fecha_inicial:
                                print("La fecha final debe ser posterior a la fecha inicial. Intenta de nuevo.")                           

                            if fecha_inicial <= fecha_final:
                               consulta_periodo = {folio: tuple(datos) for folio, datos in servicio.items() if fecha_inicial <= datos[1] <= fecha_final}
                               filtro_monto  = [datos[3] for datos in consulta_periodo.values()]   
                               promedio_monto = np.mean(filtro_monto)            

                               print("Consulta por Periodo:")
                               print("Folio\tFecha\tNombre del Cliente\tMonto\tNombre del Servicio")
                               for folio, datos in consulta_periodo.items():
                                   print(f"{folio}\t{datos[1]}\t{datos[2]}\t{datos[3]}\t{datos[0]}")
                                   print("\n")
                                   print(f"El promedio del monto es: {folio}")
                            break   

                if submenu_opc == 2:
                    print("Escogiste consulta por folio")
                    while True:
                        try:
                            consulta_folio = int(input("Ingresa el número de folio: "))
                            folio_consultas = {folio: valor for folio, valor in servicio.items() if consulta_folio == folio}
                        
                        except Exception:
                            print("No escribiste bien el dato, vuelve a intentar")
                            continue
                        
                        else:
                            if consulta_folio == folio:
                                folio_consultas = {folio: valor for folio, valor in servicio.items() if consulta_folio == folio}

                                print(f"Consulta por Folio ({consulta_folio}):")
                                print(f"Folio\tFecha\t\tNombre del Cliente\tMonto\tNombre del Servicio")
                                for folio, datos in folio_consultas.items():
                                    print(f"{folio}\t{datos[1]}\t{datos[2]}\t\t\t{datos[3]}\t{datos[0]}")
                                print("\n")
                            
                            if not consulta_folio == folio:
                                print("No se encontraron notas con ese folio")
                                break
                        break
                
            if submenu_opc == 3:
                    print("Saliendo")
                    break

        if opcion == 3:
            print("Cancelar una nota")
            while True: 
                print("Folio\t\tDatos")
                for folio, datos in servicio.items():
                    print(f"{folio}\t\t{datos}")
                break
            while True: 
                try:
                  folio_cancelar=int(input("Ingrese el folio que desea cancelar: "))
                  for folio_cancelar in servicio:
                        servicio[folio_cancelar] = [folio, fecha_nueva, nombre_cliente, monto, nombre_servicio]
                        print(servicio[folio_cancelar])

                except KeyError: 
                    print("No se encuentra registrado ese folio, vuelve a intentarlo")
                    break
                except ValueError:
                    print("No se acepta ese folio. Vuelve a intentarlo.")
                    break
                op_eliminar = int(input("¿Desea cancelar la nota? 1-Si 2-No: "))

                if op_eliminar == 1:
                    servicio_cancelado[folio_cancelar] = [fecha_nueva, nombre_cliente, monto, nombre_servicio]
                    cancelar=servicio.pop(folio_cancelar)
                    print("Se ha cancelado la nota correctamente.")
                    print(servicio_cancelado[folio_cancelar])
                    break
                elif op_eliminar == 2:
                    print("No se va a cancelar la nota")
                    break                            
                    
        if opcion == 4:
            print("Recuperar una nota")
            print("Folio\t\tDatos")
            for folio, datos in servicio_cancelado.items():
                print(f"{folio}\t\t{datos}")
            while True: 
                try:
                  folio_recuperar=int(input("Ingrese el folio que desea recuperar: "))
                  for folio_recuperar in servicio:
                        servicio[folio_recuperar] = [fecha_nueva, nombre_cliente, monto, nombre_servicio]
                        print(servicio[folio_recuperar])
                except KeyError: 
                    print("No se encuentra registrado ese folio, vuelve a intentarlo")
                    break
                except ValueError:
                    print("No se acepta ese folio. Vuelve a intentarlo.")
                    break
                op_recuperar = int(input("¿Desea recuperar la nota? 1-Si 2-No: "))
                if op_recuperar == 1:
                    recuperar=servicio_cancelado.pop(folio_recuperar)
                    servicio[folio_recuperar]=recuperar
                    print("Se ha recuperado la nota correctamente.")
                    print(servicio[folio_recuperar])
                    break
                elif op_recuperar == 2:
                    print("Se ha cancelado la recuperacion")
                    break    

        if opcion == 5:
            print("Gracias por utilizar nuestros servicios")
            break

    except Exception:
        print("No escribiste el dato correcto  o no existe, vuelvelo a intentar")
        continue
